<?php

/**
 * BaseHistoryProfessional
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $college_id
 * @property integer $depart_id
 * @property integer $is_hidden
 * @property HistoryCollege $HistoryCollege
 * @property HistoryDepart $HistoryDepart
 * @property Doctrine_Collection $HistoryProfessional
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHistoryProfessional extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('history_professional');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('college_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('depart_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('is_hidden', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('HistoryCollege', array(
             'local' => 'college_id',
             'foreign' => 'id'));

        $this->hasOne('HistoryDepart', array(
             'local' => 'depart_id',
             'foreign' => 'id'));

        $this->hasMany('HistoryInfo as HistoryProfessional', array(
             'local' => 'id',
             'foreign' => 'professional_id'));
    }
}