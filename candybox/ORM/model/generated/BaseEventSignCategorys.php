<?php

/**
 * BaseEventSignCategorys
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property integer $order_num
 * @property string $name
 * @property integer $captain_id
 * @property string $remarks
 * @property Event $Event
 * @property User $User
 * @property Doctrine_Collection $Signs
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventSignCategorys extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('event_sign_categorys');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('order_num', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('captain_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('remarks', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('type', 'MYISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'captain_id',
             'foreign' => 'id'));

        $this->hasMany('EventSign as Signs', array(
             'local' => 'id',
             'foreign' => 'category_id'));
    }
}